{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/components/BibliCitation.svelte","../../src/components/Bibliography.svelte","../../src/components/hdrepair/HDR_DiagramStep.svelte","../../src/components/InlineImage.svelte","../../src/components/SpecialTerm.svelte","../../src/components/TwoColumn.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.35.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script lang=\"ts\">\r\n    import type { MLASource } from \"../mla\";\r\n\r\n    export let source: MLASource;\r\n</script>\r\n\r\n{source.author || \"Unknown Author\"}. <i>{source.title}</i>. {source.organization || \"N/A\"}, {source.date || \"Unknown Date\"},\r\n<a href={source.url}>{source.url}</a>. Accessed 16 March 2021.\r\n","<script lang=\"ts\">\r\n    import type { MLASource } from \"../mla\";\r\n    import BibliCitation from \"./BibliCitation.svelte\";\r\n\r\n    export let websiteSources: MLASource[];\r\n</script>\r\n\r\n<div class=\"bib\">\r\n    <h1>Bibliography</h1>\r\n    <ul>\r\n        {#each websiteSources as source}\r\n            <li><BibliCitation {source} /></li>\r\n        {/each}\r\n    </ul>\r\n</div>\r\n\r\n<style>\r\n    li {\r\n        font-size: 10pt;  \r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let url: string;\r\n</script>\r\n\r\n<img class=\"step\" src={url} alt={\"\"} />\r\n\r\n<style>\r\n    .step {\r\n        width: 50%;\r\n        border-radius: 5px;\r\n        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.356);\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let url: string;\r\n    export let altText: string = \"\";\r\n    export let scale: number = 100;\r\n</script>\r\n\r\n<div class=\"cont\" style={`width:${scale}%;`}>\r\n    <a href={url}><img src={url} alt={altText} /></a>\r\n    <a href={url} class=\"link\">{url}</a>\r\n</div>\r\n\r\n<style>\r\n    .cont {\r\n        display: inline-flex;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        overflow: hidden;\r\n        word-break: break-all;\r\n    }\r\n    .link {\r\n        word-wrap: break-word;\r\n    }\r\n    a {\r\n        font-size: 7pt;\r\n        -webkit-user-drag: none;\r\n        -khtml-user-drag: none;\r\n        -moz-user-drag: none;\r\n        -o-user-drag: none;\r\n        user-drag: none;\r\n    }\r\n    img {\r\n        -webkit-user-drag: none;\r\n        -khtml-user-drag: none;\r\n        -moz-user-drag: none;\r\n        -o-user-drag: none;\r\n        user-drag: none;\r\n        width: 100%;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let definition: string = \"No definition provided.\";\r\n    let pos = { left: 0, top: 0 };\r\n    let el: HTMLElement | null;\r\n    let hovering = false;\r\n\r\n    function onMouseEnter(ev: MouseEvent) {\r\n        if (el) {\r\n            let rect = el.getBoundingClientRect();\r\n            pos.left = ev.pageX;\r\n            pos.top = ev.pageY;\r\n        }\r\n        hovering = true;\r\n    }\r\n\r\n    function onMouseLeave() {\r\n        hovering = false;\r\n    }\r\n</script>\r\n\r\n<span bind:this={el} class=\"term\" on:mouseover={onMouseEnter} on:mouseleave={onMouseLeave} on:blur={onMouseLeave}\r\n    ><slot /></span\r\n>\r\n\r\n{#if hovering}\r\n    <div class=\"defbox\" style={`left: ${pos.left}px; top: ${pos.top}px;`}>\r\n        <span class=\"term\"><slot /></span>\r\n        <br />\r\n        {definition}\r\n    </div>\r\n{/if}\r\n\r\n<style>\r\n    .term {\r\n        color: #ff8e2b;\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n    }\r\n\r\n    .defbox {\r\n        position: absolute;\r\n        padding: 20px;\r\n        border-radius: 5px;\r\n        box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.356);\r\n        background-color: white;\r\n        pointer-events: none;\r\n        max-width: 20vw;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\r\n    export let split: number = 50;\r\n    export let between: number = 5;\r\n\r\n    function gridTemplateCols() {\r\n        let a = split - (between / 2);\r\n        let b = (100 - split) - (between / 2);\r\n        return `grid-template-columns: ${a}% ${between}% ${b}%;`;\r\n    }\r\n</script>\r\n\r\n<div class=\"two-col\" style={gridTemplateCols()}>\r\n    <div class=\"first\"><slot name=\"first\" /></div>\r\n    <div class=\"second\"><slot name=\"second\" /></div>\r\n</div>\r\n\r\n<style>\r\n    .two-col {\r\n        width: 100%;\r\n        display: grid;\r\n    }\r\n\r\n    .first {\r\n        grid-column: 1;\r\n    }\r\n\r\n    .second {\r\n        grid-column: 3;\r\n    }\r\n</style>\r\n","<script lang=\"ts\">\n    import Bibliography from \"./components/Bibliography.svelte\";\n    import HdrDiagram from \"./components/hdrepair/HDR_Diagram.svelte\";\n    import InlineImage from \"./components/InlineImage.svelte\";\n    import SpecialTerm from \"./components/SpecialTerm.svelte\";\n    import TwoColumn from \"./components/TwoColumn.svelte\";\n    import type { MLASource } from \"./mla\";\n\n    const sources: MLASource[] = [\n        {\n            author: \"Medline Plus\",\n            organization: \"U.S. National Library of Medicine\",\n            title: \"Sickle Cell Disease\",\n            date: \"7 June 2018\",\n            url: \"https://medlineplus.gov/sicklecelldisease.html\",\n        },\n        {\n            author: \"National Heart, Lung, and Blood Institute\",\n            organization: \"U.S. Department of Health and Human Services\",\n            title: \"Anemia\",\n            url: \"https://www.nhlbi.nih.gov/health-topics/anemia\",\n        },\n        {\n            organization: \"WebMD\",\n            title: \"Anemia\",\n            url: \"https://www.webmd.com/a-to-z-guides/understanding-anemia-basics\",\n        },\n        {\n            organization: \"Center for Disease Control and Prevention\",\n            title: \"Complications and Treatments of Sickle Cell Disease\",\n            url: \"https://www.cdc.gov/ncbddd/sicklecell/treatments.html\",\n        },\n        {\n            author: \"SJCRH Dept. of Hematology\",\n            organization: \"St. Jude Children's Research Hospital\",\n            title: \"Bone Marrow (Stem Cell) Transplant for Sickle Cell Disease\",\n            url:\n                \"https://www.stjude.org/content/dam/en_US/shared/www/patient-support/hematology-literature/bone-marrow-stem-cell-transplant-for-sickle-cell-disease.pdf\",\n        },\n        {\n            author: \"National Heart, Lung, and Blood Institute\",\n            organization: \"U.S. Department of Health and Human Services\",\n            title: \"Sickle Cell Disease\",\n            url: \"https://www.nhlbi.nih.gov/health-topics/sickle-cell-disease\",\n            date: \"1 September 2020\",\n        },\n        {\n            organization: \"Mayo Clinic\",\n            title: \"Hemoglobin Test\",\n            url: \"https://www.mayoclinic.org/tests-procedures/hemoglobin-test/about/pac-20385075\",\n            date: \"9 October 2019\",\n        },\n        {\n            title: \"What are genome editing and CRISPR-Cas9?\",\n            organization: \"Medline Plus\",\n            date: \"18 September 2020\",\n            url: \"https://medlineplus.gov/genetics/understanding/genomicresearch/genomeediting/\",\n        },\n        {\n            title: \"CRISPR/Cas9\",\n            organization: \"Tufts University\",\n            author: \"Peter Cananagh, Anthony Garrity\",\n            url: \"https://sites.tufts.edu/crispr/\",\n        },\n        {\n            title: \"Gene Editing Mechanism of CRISPR-Cas9\",\n            author: \"Wyss Institute\",\n            organization: \"Harvard University\",\n            url: \"https://wyss.harvard.edu/media-post/gene-editing-mechanism-of-crispr-cas9/\",\n        },\n        {\n            title: \"Gene Therapy in a Patient with Sickle Cell Disease\",\n            author:\n                \"Jean-Antoine Ribeil, M.D., Ph.D., Salima Hacein-Bey-Abina, Pharm.D., Ph.D., Emmanuel Payen, Ph.D., et. al.\",\n            date: \"2 March 2017\",\n            url: \"https://www.nejm.org/doi/full/10.1056/NEJMoa1609677\",\n        },\n        {\n            title: \"Genetic Mutation\",\n            author: \"Suzanne Clancy, Ph.D.\",\n            organization: \"Nature Education\",\n            url: \"https://www.nature.com/scitable/topicpage/genetic-mutation-441/\",\n        },\n    ];\n</script>\n\n<main>\n    <div class=\"header\">\n        <h1>Sickle Cell Anemia and CRISPR</h1>\n        <span>By Ian Huang</span>\n    </div>\n    <div class=\"main\">\n        <h1>What is Sickle Cell Anemia?</h1>\n        <TwoColumn split={70}>\n            <div slot=\"first\">\n                <p>\n                    Sickle cell anemia is a form of <SpecialTerm\n                        definition=\"A condition defined by a low count of blood cells, characterized by a lack of oxygen in the blood.\"\n                        >anemia</SpecialTerm\n                    >, a blood condition that causes dizziness, irregular heartbeat, joint pain, fatigue, and\n                    developmental problems for children. At its core, sickle cell anemia is caused by a <SpecialTerm\n                        definition=\"A health problem caused by issues in one's genes\">genetic disorder</SpecialTerm\n                    >\n                    called <i>sickle cell disease</i> (SCD). A defective gene causes red blood cells to become\n                    <i>sickle-shaped</i>, as shown in the image to the right.\n                </p>\n                <p>\n                    These irregularly-shaped red blood cells are fragile, breaking easily, and making it difficult for\n                    the body to replenish them in sufficient amounts. Additionally, the sickle cells can stick to the\n                    walls of blood vessels, causing blockages and starving tissues of oxygen.\n                </p>\n                <h3>Common Health Problems Resulting from Sickle Cell Disease</h3>\n\n                <ul>\n                    <li>Fatigue related to anemia</li>\n                    <li>Swelling of hands and feet</li>\n                    <li>\n                        Damage to the <SpecialTerm\n                            definition=\"An organ that filters the blood, stores red and white blood cells, and recycles old red blood cells.\"\n                            >spleen</SpecialTerm\n                        >\n                    </li>\n                    <li>Increased risk of infection</li>\n                    <li>Episodes of sudden pain, ranging in severity</li>\n                </ul>\n            </div>\n            <div slot=\"second\">\n                <InlineImage\n                    url=\"https://www.genome.gov/sites/default/files/tg/en/illustration/sickle_cell_disease.jpg\"\n                />\n            </div>\n        </TwoColumn>\n        <TwoColumn split={70}>\n            <div slot=\"first\">\n                <h3>Traditional Treatments for Sickle Cell Disease</h3>\n                <p>\n                    The most common form of treatment for sickle cell anemia patients involves bone marrow transplant.\n                    Bone marrow is responsible for producing the red blood cells in your body, and in patients with SCD,\n                    the bone marrow tissue contains the faulty genetics responsible for producing malformed red blood\n                    cells. In a bone marrow transplant, healthy bone marrow tissue is taken from a donor and inserted\n                    into the patient's bone marrow.\n                </p>\n                <p>\n                    Unfortunately, this treatment is prone to issues such as the body <SpecialTerm\n                        definition=\"When foreign tissue is inserted into your body, such as in the case of a bone marrow transplant, your body may reject it, meaning that your immune system recognizes it as foreign and tries to destroy it.\"\n                        >rejecting</SpecialTerm\n                    > the new bone tissue; finding donors with a compatible <SpecialTerm\n                        definition=\"A person's blood type is determined by the presence of immune proteins in their blood. Incompatible blood types can lead to complications.\"\n                        >blood type</SpecialTerm\n                    > can be difficult. Additionally, the procedure may cause other unintended side effects such as infection,\n                    or damage to nearby blood vessels.\n                </p>\n            </div>\n            <div slot=\"second\">\n                <InlineImage\n                    url=\"https://www.ohsu.edu/sites/default/files/2019-03/stem-cell-transplant-w-captions-fullsize.jpg\"\n                />\n            </div>\n        </TwoColumn>\n        <h1>What Causes Sickle Cell Disease?</h1>\n        <TwoColumn split={20}>\n            <div slot=\"first\">\n                <InlineImage url=\"https://medlineplus.gov/images/PX000154_PRESENTATION.jpeg\" />\n            </div>\n            <div slot=\"second\">\n                <TwoColumn split={80}>\n                    <div slot=\"first\">\n                        <h3>What is Hemoglobin?</h3>\n                        Hemoglobin (also spelled&nbsp<i>haemoglobin</i>) is a <SpecialTerm\n                            definition=\"A very large organic molecule that serves a variety of purposes in the body\"\n                            >protein</SpecialTerm\n                        > in your red blood cells that is responsible for carrying oxygen to your organs. Oxygen is essential\n                        for your cells to function, and without it, large groups of cells called tissues will die, potentially\n                        causing organ damage. Additionally, hemoglobin contains large amounts of iron, which gives blood\n                        its distinctive red color and metallic smell.\n                    </div>\n                    <div slot=\"second\">\n                        <InlineImage url=\"https://upload.wikimedia.org/wikipedia/commons/3/3d/1GZX_Haemoglobin.png\" />\n                    </div>\n                </TwoColumn>\n                <h3>DNA, Hemoglobin, and Sickle Cell Disease</h3>\n                <p>\n                    DNA is a large, double-stranded organic molecule made up of long sequences of <SpecialTerm\n                        definition={'A sugar-based molecule that consists the \"rungs\" on the ladder-shaped model of DNA that is commonly seen in scientific literature.'}\n                        >nucleobases</SpecialTerm\n                    > that arrange themselves in units called genes. Many genes, such as the one affected by SCD correspond\n                    to sequences of molecules that make up proteins. As mentioned before, SCD is caused by a defective gene\n                    in one's body. This gene, called the <SpecialTerm\n                        definition={'Short for \"Hemoglobin Subunit Beta\" gene.'}>HBB gene</SpecialTerm\n                    >, is responsible for producing parts of the protein that produces hemoglobin in your blood. The <SpecialTerm\n                        definition=\"An unintended change in one's DNA. Mutations happen in the body frequently, but most are harmless and are automatically fixed by your cells. Some mutations, such as in the case of SCD, are harmful and can be passed on from generation to generation.\"\n                        >mutation</SpecialTerm\n                    > in this gene that causes SCD deforms the hemoglobin protein, turning it into a faulty type of hemoglobin\n                    referred to as <i>hemoglobin S</i>. These abnormally shaped hemoglobin proteins cause the red blood\n                    cell to <i>sickle</i>, or deform, causing their characteristic <SpecialTerm\n                        definition=\"A sickle is a farm implement similar to a scythe. Sickled red blood cells have a crescent shape resembling the blade of a sickle.\"\n                        >sickle-shaped</SpecialTerm\n                    > appearance.\n                </p>\n            </div>\n        </TwoColumn>\n        <div>\n            <h1>CRISPR Genome Editing</h1>\n            <h3>What is CRISPR/Cas9?</h3>\n            <p>\n                You may have heard about a fairly new gene-editing technology in the news commonly referred to as\n                <SpecialTerm\n                    definition=\"An acronym for Clustered Regularly Interspaced Short Palindromic Repeats. Refers to sequences of DNA that can be identified and destroyed by cells. More information below.\"\n                    >CRISPR</SpecialTerm\n                >. <SpecialTerm\n                    definition=\"Past gene-editing techniques were often imprecise or unreliable and could lead to unintended side effects in the target organism.\"\n                    >Ideally</SpecialTerm\n                >, gene editing allows scientists to precisely and accurately add, modify, or remove sequences of bases\n                in an organism's DNA. In doing so, scientists are given precise control over the genes that dictate the\n                creation of proteins or the expression of traits such eye color, hair color, height, resistance to\n                certain diseases, and much more. Cas9 refers to the protein that allows CRISPR to work. Cas9 itself\n                stands for <i>CRISPR-associated endonuclease 9</i>. The Cas9 protein exists naturally in bacteria as a\n                way to identify and cut viral DNA, acting as a defense mechanism against viruses. In using CRISPR/Cas9\n                for gene-editing, we use the Cas9 protein to cut the cell's own DNA rather than that of a virus or other\n                foreign body.\n            </p>\n            <p>\n                To identify the DNA Cas9 protein carries a segment of <i>guide RNA</i>, sometimes called <SpecialTerm\n                    definition={'Short for \"single guide RNA\"'}>sgRNA</SpecialTerm\n                >. RNA is similar to DNA in that it is a large organic molecule made up of four unique bases. RNA in\n                general acts as a complementary molecule to DNA. It can be used to store copies of genetic sequences and\n                be used to replicate or identify them, as it is used in this case. Once Cas9 identifies the target\n                sequence of DNA as a complementary match to its guide RNA, the Cas9 protein cuts the DNA, prompting the\n                cell to repair the strand.\n            </p>\n            <h3>Homology-Directed Repair</h3>\n            <p>\n                <SpecialTerm\n                    definition=\"Homology, in genetics, refers to a state of similarity, or having a similar structure.\"\n                    >Homology-Directed</SpecialTerm\n                > Repair (HDR) is a mechanism whereby DNA strands that were broken by the Cas9 protein can be repaired. When\n                the cell detects a <SpecialTerm\n                    definition=\"Remember DNA is double-stranded. A break in the DNA sequence such as that induced by the Cas9 protein sever both strands of the molecule, initiating a repair.\"\n                    >double strand break</SpecialTerm\n                > (DSB) in one of its DNA strands, the cell looks for a nearby segment of DNA that it can use to patch the\n                break in the DNA. Specifically, it looks for strands of DNA that contain matching sequences of DNA to the\n                ends that were just cut. This is where the term \"homology\" in homology directed repair comes into play. The\n                cell then uses these sequences as templates with which to fill in the gap created by the Cas9 protein.\n            </p>\n            <p>\n                This mechanism allows scientists, by means of intentionally cutting parts of the DNA and providing large\n                amounts of template/donor DNA strands along with the engineered Cas9 proteins, to insert or modify\n                specific parts of a genetic sequence. A diagram for homology-directed repair is illustrated below.\n            </p>\n            <HdrDiagram />\n        </div>\n        <h1>CRISPR Applications in Treating Sickle Cell Disease</h1>\n        <p>\n            The mechanisms by which scientists are able to precisely edit DNA can be used to treat genetic disorders\n            such as sickle cell anemia. As mentioned before, with traditional methods involving bone marrow\n            transplantation, in can be difficult to find a sufficient bone marrow donor. In the United States, less than\n            20% of patients are able to find a donor to sustain this treatment (Jean-Antoine Ribeil, M.D., et. al.).\n            This is why finding an alternative method that can be generalized to more people is essential.\n        </p>\n        <h3>What About the Sickle-Cell Gene Causes Sickle Cell?</h3>\n        <p>\n            More specifically, CRISPR allows scientists to edit the HBB gene (described above). In this gene, a specific\n            sequence of bases (<SpecialTerm definition=\"Short for the chemical adenine\">A</SpecialTerm>, <SpecialTerm\n                definition=\"Short for the chemical guanine\">G</SpecialTerm\n            >, <SpecialTerm definition=\"Short for the chemical cytosine\">C</SpecialTerm>, and <SpecialTerm\n                definition=\"Short for the chemical thymine\">T</SpecialTerm\n            >) defines the structure of the hemoglobin protein. Each pair of three bases, or letters, corresponds to an\n            <SpecialTerm\n                definition=\"A building block of protein. Every protein is made up of a specific sequence of amino acids that defines the structure and function of that protein.\"\n                >amino acid</SpecialTerm\n            > that is used to construct the protein. In the case of the faulty HBB gene, a single letter near the middle\n            of the genetic sequence is <SpecialTerm\n                definition=\"This changes a single amino acid in the hemoglobin protein from glutamic acid to valine.\"\n                >changed from a A to a T</SpecialTerm\n            >. This single modification, as small is it may seem in comparison to the billions of letters that make up\n            the complete human genome, has dramatic ramifications.\n        </p>\n        <h3>CRISPR Treatment of the Sickle Cell Gene</h3>\n        <p>\n            As mentioned before, CRISPR allows scientists to precisely and accurately modify sequences of DNA. If the\n            process of Cas9 DNA-cutting and homology directed repair were used to edit the T back into an A, then the\n            proteins produced by these modified cells would not be conducive to producing sickled red blood cells.\n        </p>\n        <h3>Methodology</h3>\n        <p>\n            As CRISPR technology is still fairly new, and the safety of genenome editing in human patients is still not\n            completely understood, current scases where CRISPR is used to treat sickle cell anemia, despite showing\n            promise for being useful in the future, are rare. In one case study, <SpecialTerm\n                definition=\"Stem cells are unspecialized cells in the body that can turn into any other type of cell in the body. In the context of bone marrow, stem cells are the raw ingredients for red blood cells.\"\n                >stem cells</SpecialTerm\n            > were collected from a patient's bone marrow to be genetically modified in a lab. After the process of CRISPR\n            gene editing was applied on these cells, the modified tissue was inserted back into the patients bone marrow.\n            In a period of fifteen months after the gene treatment had occurred, no notable sickle-cell-related events such\n            as <SpecialTerm\n                definition=\"Anemia can cause episodic pain that can range from mild to severe. More information above.\"\n                >pain crises</SpecialTerm\n            > were observed, and the patient was discharged with <SpecialTerm\n                definition=\"Most of the side effects that did occur were related to infection, not gene editing, due to the process of drilling into the bone, an invasive and somewhat risky process.\"\n                >minimal side effects</SpecialTerm\n            >.\n        </p>\n        <i\n            >The full case study, as it was described here, can be found <a\n                href=\"https://www.nejm.org/doi/full/10.1056/NEJMoa1609677\">here</a\n            > or in the references section below.</i\n        >\n        <h3>More Information</h3>\n        <p>\n            Here is a video by the <a href=\"https://www.genome.gov/\">National Human Genome Research Institute</a> explaining\n            the details of this treatment in more detail\n        </p>\n        <iframe\n            title=\"Embedded Youtube Video\"\n            src=\"https://www.youtube.com/embed/3mKj8iLcHKg\"\n            frameborder=\"0\"\n            style=\"width: 60vh; height: 40vh;\"\n            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n            allowfullscreen\n        />\n        <h3>Conclusion</h3>\n        <p>\n            Gene therapy using CRISPR/Cas9 technology can be a very effective and far more accessible method of treating\n            sickle cell disease, a condition that was previously incurable. This is not to say that there are not\n            drawbacks of using this method. As mentioned before, the side effects of gene editing are not well\n            understood, especially in humans. Although CRISPR is far more precise in gene editing than some earlier\n            methods, unintended edits to the genetic sequence can cause harmful results, including cancer.\n        </p>\n        <p>\n            Despite this, gene therapy continues to evolve, and current research shows promise that, with time, gene therapy\n            will be used as a new way to treat the millions around the world who continue to suffer from genetic\n            disorders.\n        </p>\n        <Bibliography websiteSources={sources} />\n        <p style=\"font-size: 12pt; opacity: 0.5; font-style: italic;\">\n            The information and resources on this site are not intended to treat, diagnose, or serve as a replacement\n            for advice from a qualified medical professional.\n        </p>\n    </div>\n    <div class=\"footer\">\n        I built this website from scratch! Check out the source code <a href=\"https://github.com/iahuang/crispr-project\"\n            >here</a\n        >.\n    </div>\n</main>\n\n<style>\n    @import url(\"https://fonts.googleapis.com/css2?family=Raleway:wght@100&display=swap\");\n    .header {\n        width: 100%;\n        display: flex;\n        flex-direction: column;\n        align-items: center;\n        /* background-color: #17222b; */\n        color: white;\n        padding-bottom: 10px;\n        background-image: url(https://frontlinegenomics.com/wp-content/uploads/2020/12/bioengineering-scaled.jpg);\n        background-position: right;\n        background-size: cover;\n        padding-bottom: 50px;\n    }\n\n    .header > h1 {\n        color: white;\n        user-select: none;\n        padding-top: 10px;\n        font-family: \"Raleway\", sans-serif;\n        font-weight: 100;\n        font-size: 5vw;\n        text-shadow: 0px 0px 40px white, 0px 0px 30px white, 0px 0px 20px white, 0px 0px 10px white;\n    }\n\n    .main {\n        padding-left: 10vw;\n        padding-right: 10vw;\n    }\n\n    .footer {\n        width: 100%;\n        background-color: rgba(0, 0, 0, 0.05);\n        bottom: 0;\n        padding: 20px;\n    }\n</style>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {\n        name: 'world'\n    }\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","style","setProperty","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","flushing","seen_callbacks","Set","flush","update","$$","pop","callback","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","d","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","author","title","organization","date","url","iterations","left","top","el","split","body"],"mappings":"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"}